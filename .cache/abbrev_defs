;;-*-coding: utf-8;-*-
(define-abbrev-table 'Buffer-menu-mode-abbrev-table '())

(define-abbrev-table 'Custom-mode-abbrev-table '())

(define-abbrev-table 'Info-edit-mode-abbrev-table '())

(define-abbrev-table 'Man-mode-abbrev-table '())

(define-abbrev-table 'ada-mode-abbrev-table '())

(define-abbrev-table 'ag-mode-abbrev-table '())

(define-abbrev-table 'anaconda-mode-view-mode-abbrev-table '())

(define-abbrev-table 'apropos-mode-abbrev-table '())

(define-abbrev-table 'awk-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'bat-mode-abbrev-table '())

(define-abbrev-table 'bbdb-mode-abbrev-table '())

(define-abbrev-table 'bc-mode-abbrev-table '())

(define-abbrev-table 'bibtex-mode-abbrev-table '())

(define-abbrev-table 'bmkp-edit-bookmark-record-mode-abbrev-table '())

(define-abbrev-table 'bmkp-edit-bookmark-records-mode-abbrev-table '())

(define-abbrev-table 'bmkp-edit-tags-mode-abbrev-table '())

(define-abbrev-table 'bookmark-bmenu-mode-abbrev-table '())

(define-abbrev-table 'bookmark-edit-annotation-mode-abbrev-table '())

(define-abbrev-table 'bookmark-show-annotation-mode-abbrev-table '())

(define-abbrev-table 'browse-kill-ring-edit-mode-abbrev-table '())

(define-abbrev-table 'browse-kill-ring-mode-abbrev-table '())

(define-abbrev-table 'c++-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'c-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'calc-trail-mode-abbrev-table '())

(define-abbrev-table 'calendar-mode-abbrev-table '())

(define-abbrev-table 'change-log-mode-abbrev-table '())

(define-abbrev-table 'comint-mode-abbrev-table '())

(define-abbrev-table 'completion-list-mode-abbrev-table '())

(define-abbrev-table 'conf-colon-mode-abbrev-table '())

(define-abbrev-table 'conf-javaprop-mode-abbrev-table '())

(define-abbrev-table 'conf-ppd-mode-abbrev-table '())

(define-abbrev-table 'conf-space-mode-abbrev-table '())

(define-abbrev-table 'conf-unix-mode-abbrev-table '())

(define-abbrev-table 'conf-windows-mode-abbrev-table '())

(define-abbrev-table 'conf-xdefaults-mode-abbrev-table '())

(define-abbrev-table 'cperl-mode-abbrev-table
  '(
    ("=head1" "=head1" cperl-electric-pod 0)
    ("=head2" "=head2" cperl-electric-pod 0)
    ("=over" "=over" cperl-electric-pod 0)
    ("=pod" "=pod" cperl-electric-pod 0)
    ("continue" "continue" cperl-electric-else 0)
    ("do" "do" cperl-electric-keyword 0)
    ("else" "else" cperl-electric-else 0)
    ("elsif" "elsif" cperl-electric-keyword 0)
    ("for" "for" cperl-electric-keyword 0)
    ("foreach" "foreach" cperl-electric-keyword 0)
    ("foreachmy" "foreachmy" cperl-electric-keyword 0)
    ("formy" "formy" cperl-electric-keyword 0)
    ("head1" "head1" cperl-electric-pod 0)
    ("head2" "head2" cperl-electric-pod 0)
    ("if" "if" cperl-electric-keyword 0)
    ("over" "over" cperl-electric-pod 0)
    ("pod" "pod" cperl-electric-pod 0)
    ("unless" "unless" cperl-electric-keyword 0)
    ("until" "until" cperl-electric-keyword 0)
    ("while" "while" cperl-electric-keyword 0)
   ))

(define-abbrev-table 'debugger-mode-abbrev-table '())

(define-abbrev-table 'diary-fancy-display-mode-abbrev-table '())

(define-abbrev-table 'diary-mode-abbrev-table '())

(define-abbrev-table 'diff-mode-abbrev-table '())

(define-abbrev-table 'dig-mode-abbrev-table '())

(define-abbrev-table 'diredp-w32-drives-mode-abbrev-table '())

(define-abbrev-table 'dos-mode-abbrev-table '())

(define-abbrev-table 'dsssl-mode-abbrev-table '())

(define-abbrev-table 'edebug-eval-mode-abbrev-table '())

(define-abbrev-table 'edit-abbrevs-mode-abbrev-table '())

(define-abbrev-table 'elisp-byte-code-mode-abbrev-table '())

(define-abbrev-table 'elpy-refactor-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-mode-abbrev-table '())

(define-abbrev-table 'emoji-cheat-sheet-plus-buffer-mode-abbrev-table '())

(define-abbrev-table 'epa-info-mode-abbrev-table '())

(define-abbrev-table 'epa-key-list-mode-abbrev-table '())

(define-abbrev-table 'epa-key-mode-abbrev-table '())

(define-abbrev-table 'ert-results-mode-abbrev-table '())

(define-abbrev-table 'ert-simple-view-mode-abbrev-table '())

(define-abbrev-table 'eshell-mode-abbrev-table '())

(define-abbrev-table 'evil-command-window-mode-abbrev-table '())

(define-abbrev-table 'evil-list-view-mode-abbrev-table '())

(define-abbrev-table 'eww-bookmark-mode-abbrev-table '())

(define-abbrev-table 'eww-buffers-mode-abbrev-table '())

(define-abbrev-table 'eww-history-mode-abbrev-table '())

(define-abbrev-table 'eww-mode-abbrev-table '())

(define-abbrev-table 'fundamental-mode-abbrev-table '())

(define-abbrev-table 'gdb-breakpoints-mode-abbrev-table '())

(define-abbrev-table 'gdb-disassembly-mode-abbrev-table '())

(define-abbrev-table 'gdb-frames-mode-abbrev-table '())

(define-abbrev-table 'gdb-locals-mode-abbrev-table '())

(define-abbrev-table 'gdb-memory-mode-abbrev-table '())

(define-abbrev-table 'gdb-registers-mode-abbrev-table '())

(define-abbrev-table 'gdb-script-mode-abbrev-table '())

(define-abbrev-table 'gdb-threads-mode-abbrev-table '())

(define-abbrev-table 'geiser-debug-mode-abbrev-table '())

(define-abbrev-table 'geiser-doc-mode-abbrev-table '())

(define-abbrev-table 'geiser-messages-mode-abbrev-table '())

(define-abbrev-table 'geiser-repl-mode-abbrev-table '())

(define-abbrev-table 'geiser-xref-mode-abbrev-table '())

(define-abbrev-table 'gfm-mode-abbrev-table '())

(define-abbrev-table 'ggtags-global-mode-abbrev-table '())

(define-abbrev-table 'ggtags-view-search-history-mode-abbrev-table '())

(define-abbrev-table 'git-gutter+-commit-mode-abbrev-table '())

(define-abbrev-table 'git-rebase-mode-abbrev-table '())

(define-abbrev-table 'gitconfig-mode-abbrev-table '())

(define-abbrev-table 'global-abbrev-table
  '(
    ("8DELTA" "Δ" nil 0)
    ("8LAMBDA" "Λ" nil 0)
    ("8OMETA" "Ω" nil 0)
    ("8PHI" "Φ" nil 0)
    ("8PI" "Π" nil 0)
    ("8PSI" "Ψ" nil 0)
    ("8X" "⤬" nil 0)
    ("8XI" "Ξ" nil 0)
    ("8a1" "→" nil 0)
    ("8a10" "▷" nil 0)
    ("8a11" "△" nil 0)
    ("8a12" "▽" nil 0)
    ("8a13" "⇦" nil 0)
    ("8a14" "⇨" nil 0)
    ("8a15" "⇧" nil 0)
    ("8a16" "⇩" nil 0)
    ("8a17" "⬅" nil 0)
    ("8a18" "➡" nil 0)
    ("8a19" "⬆" nil 0)
    ("8a2" "←" nil 0)
    ("8a20" "⬇" nil 0)
    ("8a21" "◀" nil 0)
    ("8a3" "↑" nil 0)
    ("8a4" "↓" nil 0)
    ("8a5" "🡘" nil 0)
    ("8a6" "▶" nil 0)
    ("8a7" "▲" nil 0)
    ("8a8" "▼" nil 0)
    ("8a9" "◁" nil 0)
    ("8ac" "⏦" nil 0)
    ("8ack" "␆" nil 0)
    ("8africa" "🌍" nil 0)
    ("8ahk" "AutoHotkey" nil 0)
    ("8alarm" "⏰" nil 0)
    ("8alef" "ℵ" nil 0)
    ("8almost" "≈" nil 0)
    ("8alt" "alternative" nil 0)
    ("8am" "㏂" nil 0)
    ("8america" "🌎" nil 0)
    ("8and" "∧" nil 0)
    ("8asc" "⚕" nil 0)
    ("8asia" "🌏" nil 0)
    ("8attach" "⚓" nil 0)
    ("8au" "㍳" nil 0)
    ("8austral" "₳" nil 0)
    ("8baht" "฿" nil 0)
    ("8bar" "㍴" nil 0)
    ("8because" "∵" nil 0)
    ("8bengali" "৳" nil 0)
    ("8bg" "background" nil 0)
    ("8bhazard" "☣" nil 0)
    ("8bio" "☣" nil 0)
    ("8bomb" "💣" nil 0)
    ("8bq" "㏃" nil 0)
    ("8bs" "␈" nil 0)
    ("8c" "㏄" nil 0)
    ("8c1" "○" nil 0)
    ("8c10" "◯" nil 0)
    ("8c11" "⚪" nil 0)
    ("8c12" "⚫" nil 0)
    ("8c13" "⚬" nil 0)
    ("8c14" "❍" nil 0)
    ("8c15" "￮" nil 0)
    ("8c16" "⊙" nil 0)
    ("8c17" "⊚" nil 0)
    ("8c18" "⊛" nil 0)
    ("8c19" "∙" nil 0)
    ("8c2" "☉" nil 0)
    ("8c20" "∘" nil 0)
    ("8c3" "◎" nil 0)
    ("8c4" "◉" nil 0)
    ("8c5" "○" nil 0)
    ("8c6" "◌" nil 0)
    ("8c7" "◎" nil 0)
    ("8c8" "●" nil 0)
    ("8c9" "◦" nil 0)
    ("8cadu" "☤" nil 0)
    ("8cal" "㎈" nil 0)
    ("8ccir" "⎐" nil 0)
    ("8cd" "㏅" nil 0)
    ("8cedi" "₵" nil 0)
    ("8cent" "¢" nil 0)
    ("8char" "character" nil 0)
    ("8chmod" "find . -type f -exec chmod 644 {} ';'" nil 0)
    ("8chmod2" "find . -type d -exec chmod 755 {} ';'" nil 0)
    ("8circle" "●" nil 0)
    ("8clock1" "🕐" nil 0)
    ("8clock10" "🕙" nil 0)
    ("8clock11" "🕚" nil 0)
    ("8clock12" "🕛" nil 0)
    ("8clock2" "🕑" nil 0)
    ("8clock3" "🕒" nil 0)
    ("8clock4" "🕓" nil 0)
    ("8clock5" "🕔" nil 0)
    ("8clock6" "🕕" nil 0)
    ("8clock7" "🕖" nil 0)
    ("8clock8" "🕗" nil 0)
    ("8clock9" "🕘" nil 0)
    ("8cm" "㎝" nil 0)
    ("8cm^2" "㎠" nil 0)
    ("8cm^3" "㎤" nil 0)
    ("8colon" "₡" nil 0)
    ("8conmat" "⊹" nil 0)
    ("8contain" "∋" nil 0)
    ("8cp" "computer" nil 0)
    ("8cr" "␍" nil 0)
    ("8cr1" "✙" nil 0)
    ("8cr10" "✚" nil 0)
    ("8cr11" "✜" nil 0)
    ("8cr12" "✛" nil 0)
    ("8cr13" "✢" nil 0)
    ("8cr14" "✣" nil 0)
    ("8cr15" "✤" nil 0)
    ("8cr16" "✥" nil 0)
    ("8cr2" "♱" nil 0)
    ("8cr3" "♰" nil 0)
    ("8cr4" "☥" nil 0)
    ("8cr5" "✞" nil 0)
    ("8cr6" "✟" nil 0)
    ("8cr7" "✝" nil 0)
    ("8cr8" "†" nil 0)
    ("8cr9" "✠" nil 0)
    ("8cross" "✚" nil 0)
    ("8crossproduct" "⨯" nil 0)
    ("8cruzeiro" "₢" nil 0)
    ("8cs" "⍟" nil 0)
    ("8curly" "“\\([^”]+?\\)”" nil 0)
    ("8cursor" "⌖" nil 0)
    ("8da" "㍲" nil 0)
    ("8david" "🔯" nil 0)
    ("8db" "㏈" nil 0)
    ("8dc" "⎓" nil 0)
    ("8dead" "📆" nil 0)
    ("8def" "definition" nil 0)
    ("8degree" "°" nil 0)
    ("8dgraph" "📉" nil 0)
    ("8dia" "💎" nil 0)
    ("8diamond" "◆" nil 0)
    ("8ditto" "ditto -ck --sequesterRsrc --keepParent src dest" nil 0)
    ("8div" "÷" nil 0)
    ("8dl" "㎗" nil 0)
    ("8dollar" "$" nil 0)
    ("8dong" "₫" nil 0)
    ("8downward" "⏬" nil 0)
    ("8drachma" "₯" nil 0)
    ("8draft" "⚒" nil 0)
    ("8dt" "표적정보상세탭" nil 0)
    ("8e" "ℯ" nil 0)
    ("8earth" "🗺" nil 0)
    ("8ee" "ErgoEmacs" nil 0)
    ("8elec" "⌁" nil 0)
    ("8elem" "∈" nil 0)
    ("8email" "📧" nil 0)
    ("8empty" "∅" nil 0)
    ("8encrypted" "⚴" nil 0)
    ("8enter" "↵" nil 0)
    ("8enter2" "⎆" nil 0)
    ("8env" "environment" nil 0)
    ("8equiv" "≡" nil 0)
    ("8euro" "€" nil 0)
    ("8ev" "environment variable" nil 0)
    ("8ex" "example" nil 0)
    ("8exist" "∃" nil 0)
    ("8f0" "find . -type f -empty" nil 0)
    ("8f00" "find . -type f -size 0 -exec rm {} ';'" nil 0)
    ("8fbackward" "⏪" nil 0)
    ("8fence1" "⦀" nil 0)
    ("8fence2" "⦙" nil 0)
    ("8fence3" "⦚" nil 0)
    ("8fence4" "⧘" nil 0)
    ("8fence5" "⧙" nil 0)
    ("8fence6" "⧚" nil 0)
    ("8fence7" "⧛" nil 0)
    ("8ff" "Firefox" nil 0)
    ("8fire" "🔥" nil 0)
    ("8flag" "🚩" nil 0)
    ("8flagged" "✚" nil 0)
    ("8fm" "㎙" nil 0)
    ("8forall" "∀" nil 0)
    ("8forward" "⏩" nil 0)
    ("8frac" "₣" nil 0)
    ("8fuse" "⏛" nil 0)
    ("8gb" "㎇" nil 0)
    ("8ge" "≧" nil 0)
    ("8german" "₰" nil 0)
    ("8ghz" "㎓" nil 0)
    ("8gnomonic" "🌐" nil 0)
    ("8gpaa" "㎬" nil 0)
    ("8ground" "⏚" nil 0)
    ("8guarani" "₲" nil 0)
    ("8gy" "㏉" nil 0)
    ("8h1" "⎈" nil 0)
    ("8h10" "✿" nil 0)
    ("8h11" "❀" nil 0)
    ("8h12" "❁" nil 0)
    ("8h13" "❂" nil 0)
    ("8h14" "❃" nil 0)
    ("8h15" "❄" nil 0)
    ("8h16" "❅" nil 0)
    ("8h17" "❆" nil 0)
    ("8h18" "❇" nil 0)
    ("8h2" "✽" nil 0)
    ("8h3" "✲" nil 0)
    ("8h4" "✱" nil 0)
    ("8h5" "✻" nil 0)
    ("8h6" "✼" nil 0)
    ("8h7" "✽" nil 0)
    ("8h8" "✡" nil 0)
    ("8h9" "✾" nil 0)
    ("8ha" "㏊" nil 0)
    ("8ha1" "☚" nil 0)
    ("8ha10" "👉" nil 0)
    ("8ha11" "🖗" nil 0)
    ("8ha12" "🖘" nil 0)
    ("8ha13" "🖙" nil 0)
    ("8ha14" "🖚" nil 0)
    ("8ha15" "🖛" nil 0)
    ("8ha16" "🖜" nil 0)
    ("8ha17" "🖝" nil 0)
    ("8ha18" "🖞" nil 0)
    ("8ha19" "🖟" nil 0)
    ("8ha2" "☛" nil 0)
    ("8ha20" "🖠" nil 0)
    ("8ha21" "🖡" nil 0)
    ("8ha22" "🖢" nil 0)
    ("8ha23" "🖣" nil 0)
    ("8ha3" "☜" nil 0)
    ("8ha4" "☝" nil 0)
    ("8ha5" "☞" nil 0)
    ("8ha6" "☟" nil 0)
    ("8ha7" "👆" nil 0)
    ("8ha8" "👇" nil 0)
    ("8ha9" "👈" nil 0)
    ("8haddr" "구미시 금오산금호어울림1단지 금오산금호어울림 102동 401호" nil 0)
    ("8hd" "👇" nil 0)
    ("8hfive" "👋" nil 0)
    ("8hl" "👈" nil 0)
    ("8hmul" "✖" nil 0)
    ("8hospital" "⛨" nil 0)
    ("8hourglass" "⧖" nil 0)
    ("8hp" "㏋" nil 0)
    ("8hpa" "㍱" nil 0)
    ("8hr" "👉" nil 0)
    ("8hryvnia" "₴" nil 0)
    ("8ht" "␉" nil 0)
    ("8hu" "👆" nil 0)
    ("8hun" "💯" nil 0)
    ("8hurr" "🌀" nil 0)
    ("8hyper" "✦" nil 0)
    ("8hz" "㎐" nil 0)
    ("8ibeam" "⌶" nil 0)
    ("8ident" "≡" nil 0)
    ("8ie" "Internet Explorer" nil 0)
    ("8im" "convert -quality 85% " nil 0)
    ("8im256" "convert +dither -colors 256 " nil 0)
    ("8imf" "find . -name \"*png\" | xargs -l -i basename \"{}\" \".png\" | xargs -l -i  convert -quality 85% \"{}.png\" \"{}.jpg\"" nil 0)
    ("8ims" "convert -size  -quality 85% " nil 0)
    ("8in" "⚠" nil 0)
    ("8inc" "∆" nil 0)
    ("8inch" "㏌" nil 0)
    ("8inf" "∞" nil 0)
    ("8intersection" "∩" nil 0)
    ("8is" "ISDL DLP" nil 0)
    ("8it" "IntelliType" nil 0)
    ("8join" "⨝" nil 0)
    ("8joker" "🃏" nil 0)
    ("8js" "javascript" nil 0)
    ("8ka" "㎄" nil 0)
    ("8kb" "keyboard" nil 0)
    ("8kbd" "keybinding" nil 0)
    ("8kcal" "㎉" nil 0)
    ("8kg" "㎏" nil 0)
    ("8khz" "㎑" nil 0)
    ("8kip" "₭" nil 0)
    ("8kl" "㎘" nil 0)
    ("8km" "㎞" nil 0)
    ("8km^2" "㎢" nil 0)
    ("8km^3" "㎦" nil 0)
    ("8ko" "󾓮" nil 0)
    ("8kohm" "㏀" nil 0)
    ("8kpa" "㎪" nil 0)
    ("8kv" "㎸" nil 0)
    ("8kw" "㎾" nil 0)
    ("8l11" "Link-11 DLP" nil 0)
    ("8lambda" "λ" nil 0)
    ("8lceil" "⌈" nil 0)
    ("8le" "≦" nil 0)
    ("8lf" "␊" nil 0)
    ("8lfloor" "⌊" nil 0)
    ("8ll" "Linden Labs" nil 0)
    ("8ln" "㏑" nil 0)
    ("8log" "㏒" nil 0)
    ("8luv" "♥" nil 0)
    ("8lx" "㏓" nil 0)
    ("8m/s" "㎧" nil 0)
    ("8m/s^2" "㎨" nil 0)
    ("8m^2" "㎡" nil 0)
    ("8ma" "㎃" nil 0)
    ("8man" "卍" nil 0)
    ("8mb" "㏔" nil 0)
    ("8mg" "㎎" nil 0)
    ("8mhz" "㎒" nil 0)
    ("8mil" "㏕" nil 0)
    ("8mill" "₥" nil 0)
    ("8ml" "㎖" nil 0)
    ("8mm" "㎜" nil 0)
    ("8mm^2" "㎟" nil 0)
    ("8mm^3" "㎥" nil 0)
    ("8mma" "Mathematica" nil 0)
    ("8mohm" "㏁" nil 0)
    ("8mol" "㏖" nil 0)
    ("8mpa" "㎫" nil 0)
    ("8ms" "㎳" nil 0)
    ("8msw" "Microsoft Windows" nil 0)
    ("8mu" "μ" nil 0)
    ("8mv" "㎹" nil 0)
    ("8mw" "㎿" nil 0)
    ("8na" "㎁" nil 0)
    ("8nabla" "∇" nil 0)
    ("8naira" "₦" nil 0)
    ("8nand" "⋀" nil 0)
    ("8ne1" "⛔" nil 0)
    ("8ne2" "🚫" nil 0)
    ("8new" "✱" nil 0)
    ("8nextsong" "⏭" nil 0)
    ("8nf" "㎋" nil 0)
    ("8nin" "∉" nil 0)
    ("8nintersection" "⋂" nil 0)
    ("8nm" "㎚" nil 0)
    ("8nor" "⋁" nil 0)
    ("8not" "¬" nil 0)
    ("8ns" "㎱" nil 0)
    ("8nsum" "∑" nil 0)
    ("8null" "␀" nil 0)
    ("8num" "\\([0-9]+?\\)" nil 0)
    ("8nunion" "⋃" nil 0)
    ("8nv" "㎵" nil 0)
    ("8nw" "㎻" nil 0)
    ("8ocir" "⎏" nil 0)
    ("8ohm" "Ω" nil 0)
    ("8ok" "👌" nil 0)
    ("8or" "∨" nil 0)
    ("8ov" "㍵" nil 0)
    ("8p1" "♠" nil 0)
    ("8p2" "♣" nil 0)
    ("8p3" "♥" nil 0)
    ("8p4" "♦" nil 0)
    ("8p5" "♤" nil 0)
    ("8p6" "♧" nil 0)
    ("8p7" "♡" nil 0)
    ("8p8" "♢" nil 0)
    ("8pa" "㎩" nil 0)
    ("8partial" "∂" nil 0)
    ("8passed" "❯" nil 0)
    ("8pause" "⏯" nil 0)
    ("8peace" "☮" nil 0)
    ("8peseta" "₧" nil 0)
    ("8peso" "₱" nil 0)
    ("8pf" "㎊" nil 0)
    ("8pg" "㍶" nil 0)
    ("8ph" "㏗" nil 0)
    ("8pi" "π" nil 0)
    ("8pill" "💊" nil 0)
    ("8pin" "📌" nil 0)
    ("8pm" "㏘" nil 0)
    ("8pound" "£" nil 0)
    ("8ppm" "㏙" nil 0)
    ("8pr" "POV-Ray" nil 0)
    ("8prevsong" "⏮" nil 0)
    ("8ps" "PowerShell" nil 0)
    ("8punch" "👊" nil 0)
    ("8pv" "㎴" nil 0)
    ("8pw" "㎺" nil 0)
    ("8qt" "QuickTime" nil 0)
    ("8r1" "⁑" nil 0)
    ("8r10" "§" nil 0)
    ("8r2" "⁕" nil 0)
    ("8r3" "⁖" nil 0)
    ("8r4" "⁘" nil 0)
    ("8r5" "⁙" nil 0)
    ("8r6" "⁛" nil 0)
    ("8r7" "⁜" nil 0)
    ("8r8" "⁂" nil 0)
    ("8r9" "¶" nil 0)
    ("8rad" "㎭" nil 0)
    ("8rad/s" "㎮" nil 0)
    ("8rad/s^2" "㎯" nil 0)
    ("8ratiopp" "∝" nil 0)
    ("8rceil" "⌉" nil 0)
    ("8rcheck" "☑" nil 0)
    ("8recycle" "♺" nil 0)
    ("8replied" "❮" nil 0)
    ("8return" "⏎" nil 0)
    ("8rfloor" "⌋" nil 0)
    ("8rh" "☛" nil 0)
    ("8rhazard" "☢" nil 0)
    ("8rsync" "rsync -z -r -v -t --exclude=\"*~\" --exclude=\".DS_Store\" --exclude=\".bash_history\" --exclude=\"**/xx_xahlee_info/*\"  --exclude=\"*/_curves_robert_yates/*.png\" --exclude=\"logs/*\"  --exclude=\"xlogs/*\" --delete --rsh=\"ssh -l xah\" ~/web/ xah@example.com:~/" nil 0)
    ("8rsync2" "rsync -r -v -t --delete --rsh=\"ssh -l xah\" ~/web/ xah@example.com:~/web/" nil 0)
    ("8rsync3" "rsync -r -v -t --delete --exclude=\"**/My *\" --rsh=\"ssh -l xah\" ~/Documents/ xah@example.com:~/Documents/" nil 0)
    ("8rupee" "₨" nil 0)
    ("8s1" "★" nil 0)
    ("8s2" "☆" nil 0)
    ("8s3" "⚝" nil 0)
    ("8s4" "✡" nil 0)
    ("8sc1" "◐" nil 0)
    ("8sc10" "⚇" nil 0)
    ("8sc11" "⚈" nil 0)
    ("8sc12" "⚉" nil 0)
    ("8sc13" "♁" nil 0)
    ("8sc14" "⊖" nil 0)
    ("8sc15" "⊗" nil 0)
    ("8sc16" "⊘" nil 0)
    ("8sc2" "◑" nil 0)
    ("8sc3" "◒" nil 0)
    ("8sc4" "◓" nil 0)
    ("8sc5" "◴" nil 0)
    ("8sc6" "◵" nil 0)
    ("8sc7" "◶" nil 0)
    ("8sc8" "◷" nil 0)
    ("8sc9" "⚆" nil 0)
    ("8seen" "✔" nil 0)
    ("8sftp" "sftp xah@xahlee.org" nil 0)
    ("8shift" "⇧" nil 0)
    ("8shit" "💩" nil 0)
    ("8si" "∑" nil 0)
    ("8signed" "☡" nil 0)
    ("8sim" "시뮬레이터" nil 0)
    ("8skull" "💀" nil 0)
    ("8sl" "Second Life" nil 0)
    ("8sliding" "⛐" nil 0)
    ("8smly" "☺" nil 0)
    ("8sn" "✔" nil 0)
    ("8square" "■" nil 0)
    ("8ss" "🌠" nil 0)
    ("8ss1" "▶" nil 0)
    ("8ss10" "§" nil 0)
    ("8ss11" "¶" nil 0)
    ("8ss12" "‡" nil 0)
    ("8ss13" "※" nil 0)
    ("8ss14" "✕" nil 0)
    ("8ss15" "△" nil 0)
    ("8ss16" "◇" nil 0)
    ("8ss2" "◈" nil 0)
    ("8ss3" "◀" nil 0)
    ("8ss4" "☀" nil 0)
    ("8ss5" "♼" nil 0)
    ("8ss6" "☼" nil 0)
    ("8ss7" "☾" nil 0)
    ("8ss8" "☽" nil 0)
    ("8ss9" "☣" nil 0)
    ("8ssh" "ssh xah@xahlee.org" nil 0)
    ("8stop" "⛔" nil 0)
    ("8str" "\\([^\"]+?\\)\"" nil 0)
    ("8subset" "⊂" nil 0)
    ("8sun" "☀" nil 0)
    ("8superset" "⊃" nil 0)
    ("8syringe" "💉" nil 0)
    ("8tab" "↹" nil 0)
    ("8tent" "⛺" nil 0)
    ("8th" "⚡" nil 0)
    ("8there4" "∴" nil 0)
    ("8theta" "θ" nil 0)
    ("8thunder" "⚡" nil 0)
    ("8thz" "㎔" nil 0)
    ("8timer" "⏲" nil 0)
    ("8tomare" "✋" nil 0)
    ("8tp" "토픽" nil 0)
    ("8trash" "🚮" nil 0)
    ("8trashed" "🚮" nil 1)
    ("8tri" "▲" nil 0)
    ("8trid" "▼" nil 0)
    ("8tril" "◀" nil 0)
    ("8trir" "▶" nil 0)
    ("8ts1" "" (lambda nil (call-interactively (quote timestamp-with-name1))) 0)
    ("8tugrik" "₮" nil 0)
    ("8u3dxm" "http://3D-XplorMath.org/" nil 0)
    ("8ua" "㎂" nil 0)
    ("8uee" "http://ergoemacs.org/" nil 0)
    ("8uf" "㎌" nil 0)
    ("8ug" "㎍" nil 0)
    ("8ugraph" "📈" nil 0)
    ("8ul" "㎕" nil 0)
    ("8um" "㎛" nil 0)
    ("8union" "∪" nil 0)
    ("8unison" "unison -servercmd /usr/bin/unison c:/Users/xah/web ssh://xah@example.com//Users/xah/web" nil 0)
    ("8unread" "⎕" nil 0)
    ("8upward" "⏫" nil 0)
    ("8urgent" "⚡" nil 0)
    ("8us" "㎲" nil 0)
    ("8uv" "㎶" nil 0)
    ("8uvmm" "http://VirtualMathMuseum.org/" nil 0)
    ("8uw" "㎼" nil 0)
    ("8uxl" "http://xahlee.org/" nil 0)
    ("8var" "variable" nil 0)
    ("8vb" "Visual Basic" nil 0)
    ("8warn" "⚠" nil 0)
    ("8watch" "⌚" nil 0)
    ("8wdy" "wordy-english@yahoogroups.com" nil 0)
    ("8wifi" "📶" nil 0)
    ("8win" "Windows" nil 0)
    ("8won" "₩" nil 0)
    ("8xl" "Xah Lee" nil 0)
    ("8xor" "⊻" nil 0)
    ("8yen" "¥" nil 0)
    ("8yt" "YouTube" nil 0)
    ("8ㄴㅁㅎ" "시뮬레이터" nil 0)
    ("8ㅣㅓ" "표적정보상세탭" nil 0)
    ("8만" "卍" nil 0)
   ))

(define-abbrev-table 'gnus-article-edit-mode-abbrev-table '())

(define-abbrev-table 'gnus-article-mode-abbrev-table '())

(define-abbrev-table 'gnus-group-mode-abbrev-table '())

(define-abbrev-table 'gnus-sticky-article-mode-abbrev-table '())

(define-abbrev-table 'google-contacts-mode-abbrev-table '())

(define-abbrev-table 'grep-mode-abbrev-table '())

(define-abbrev-table 'gud-mode-abbrev-table '())

(define-abbrev-table 'helm-ag-mode-abbrev-table '())

(define-abbrev-table 'helm-grep-mode-abbrev-table '())

(define-abbrev-table 'helm-major-mode-abbrev-table '())

(define-abbrev-table 'helm-moccur-mode-abbrev-table '())

(define-abbrev-table 'help-mode-abbrev-table '())

(define-abbrev-table 'html-mode-abbrev-table '())

(define-abbrev-table 'httprepl-mode-abbrev-table '())

(define-abbrev-table 'ibuffer-mode-abbrev-table '())

(define-abbrev-table 'idl-mode-abbrev-table '())

(define-abbrev-table 'image-dired-display-image-mode-abbrev-table '())

(define-abbrev-table 'image-dired-thumbnail-mode-abbrev-table '())

(define-abbrev-table 'imenu-list-major-mode-abbrev-table '())

(define-abbrev-table 'inferior-emacs-lisp-mode-abbrev-table '())

(define-abbrev-table 'inferior-moz-mode-abbrev-table '())

(define-abbrev-table 'inferior-python-mode-abbrev-table '())

(define-abbrev-table 'inferior-scheme-mode-abbrev-table '())

(define-abbrev-table 'irfc-mode-abbrev-table '())

(define-abbrev-table 'ivy-occur-grep-mode-abbrev-table '())

(define-abbrev-table 'ivy-occur-mode-abbrev-table '())

(define-abbrev-table 'java-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'js-jsx-mode-abbrev-table '())

(define-abbrev-table 'js-mode-abbrev-table '())

(define-abbrev-table 'js2-jsx-mode-abbrev-table '())

(define-abbrev-table 'js2-mode-abbrev-table '())

(define-abbrev-table 'lisp-mode-abbrev-table '())

(define-abbrev-table 'log-edit-mode-abbrev-table '())

(define-abbrev-table 'log4e-mode-abbrev-table '())

(define-abbrev-table 'magit-cherry-mode-abbrev-table '())

(define-abbrev-table 'magit-diff-mode-abbrev-table '())

(define-abbrev-table 'magit-log-mode-abbrev-table '())

(define-abbrev-table 'magit-log-select-mode-abbrev-table '())

(define-abbrev-table 'magit-merge-preview-mode-abbrev-table '())

(define-abbrev-table 'magit-mode-abbrev-table '())

(define-abbrev-table 'magit-popup-mode-abbrev-table '())

(define-abbrev-table 'magit-process-mode-abbrev-table '())

(define-abbrev-table 'magit-reflog-mode-abbrev-table '())

(define-abbrev-table 'magit-refs-mode-abbrev-table '())

(define-abbrev-table 'magit-repolist-mode-abbrev-table '())

(define-abbrev-table 'magit-revision-mode-abbrev-table '())

(define-abbrev-table 'magit-stash-mode-abbrev-table '())

(define-abbrev-table 'magit-stashes-mode-abbrev-table '())

(define-abbrev-table 'magit-status-mode-abbrev-table '())

(define-abbrev-table 'markdown-mode-abbrev-table '())

(define-abbrev-table 'message-mode-abbrev-table '())

(define-abbrev-table 'messages-buffer-mode-abbrev-table '())

(define-abbrev-table 'mu4e-org-mode-abbrev-table '())

(define-abbrev-table 'mu4e~update-mail-mode-abbrev-table '())

(define-abbrev-table 'nxml-mode-abbrev-table '())

(define-abbrev-table 'objc-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'occur-edit-mode-abbrev-table '())

(define-abbrev-table 'occur-mode-abbrev-table '())

(define-abbrev-table 'org-export-stack-mode-abbrev-table '())

(define-abbrev-table 'org-mode-abbrev-table '())

(define-abbrev-table 'outline-mode-abbrev-table '())

(define-abbrev-table 'package-menu-mode-abbrev-table '())

(define-abbrev-table 'paradox-commit-list-mode-abbrev-table '())

(define-abbrev-table 'paradox-menu-mode-abbrev-table '())

(define-abbrev-table 'pike-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'proced-mode-abbrev-table '())

(define-abbrev-table 'process-menu-mode-abbrev-table '())

(define-abbrev-table 'profiler-report-mode-abbrev-table '())

(define-abbrev-table 'prog-mode-abbrev-table '())

(define-abbrev-table 'project-explorer-mode-abbrev-table '())

(define-abbrev-table 'python-mode-abbrev-table '())

(define-abbrev-table 'python-mode-skeleton-abbrev-table
  '(
   ))

(define-abbrev-table 'qac-mode-abbrev-table '())

(define-abbrev-table 'reb-lisp-mode-abbrev-table '())

(define-abbrev-table 'reb-mode-abbrev-table '())

(define-abbrev-table 'rst-mode-abbrev-table '())

(define-abbrev-table 'rst-toc-mode-abbrev-table '())

(define-abbrev-table 'rxt-help-mode-abbrev-table '())

(define-abbrev-table 'scheme-mode-abbrev-table '())

(define-abbrev-table 'select-tags-table-mode-abbrev-table '())

(define-abbrev-table 'sgml-mode-abbrev-table '())

(define-abbrev-table 'sh-mode-abbrev-table '())

(define-abbrev-table 'shell-mode-abbrev-table '())

(define-abbrev-table 'skewer-clients-mode-abbrev-table '())

(define-abbrev-table 'skewer-error-mode-abbrev-table '())

(define-abbrev-table 'smime-mode-abbrev-table '())

(define-abbrev-table 'snippet-mode-abbrev-table '())

(define-abbrev-table 'spacemacs/report-issue-mode-abbrev-table '())

(define-abbrev-table 'special-mode-abbrev-table '())

(define-abbrev-table 'speedbar-mode-abbrev-table '())

(define-abbrev-table 'sql-mode-abbrev-table '())

(define-abbrev-table 'svn-log-edit-mode-abbrev-table '())

(define-abbrev-table 'svn-log-view-mode-abbrev-table '())

(define-abbrev-table 'svn-status-diff-mode-abbrev-table '())

(define-abbrev-table 'tabulated-list-mode-abbrev-table '())

(define-abbrev-table 'tar-mode-abbrev-table '())

(define-abbrev-table 'telnet-mode-abbrev-table '())

(define-abbrev-table 'term-mode-abbrev-table '())

(define-abbrev-table 'text-mode-abbrev-table '())

(define-abbrev-table 'thumbs-mode-abbrev-table '())

(define-abbrev-table 'thumbs-view-image-mode-abbrev-table '())

(define-abbrev-table 'url-cookie-mode-abbrev-table '())

(define-abbrev-table 'vc-bzr-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-dir-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-edit-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-git-region-history-mode-abbrev-table '())

(define-abbrev-table 'vc-hg-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-svn-log-view-mode-abbrev-table '())

(define-abbrev-table 'web-mode-abbrev-table '())

(define-abbrev-table 'xah-css-mode-abbrev-table
  '(
    ("bgc" "background-color" xah-css--ahf 0)
    ("rgb" "rgb(▮)" xah-css--ahf 0)
    ("rgba" "rgba(▮)" xah-css--ahf 0)
    ("rotate" "rotate(▮9deg)" xah-css--ahf 0)
    ("rotate3d" "rotate3d(▮)" xah-css--ahf 0)
    ("rotateX" "rotateX(▮)" xah-css--ahf 0)
    ("rotateY" "rotateY(▮)" xah-css--ahf 0)
    ("rotateZ" "rotateZ(▮)" xah-css--ahf 0)
    ("scale" "scale(▮)" xah-css--ahf 0)
    ("scale3d" "scale3d(▮)" xah-css--ahf 0)
    ("scaleX" "scaleX(▮)" xah-css--ahf 0)
    ("scaleY" "scaleY(▮)" xah-css--ahf 0)
    ("scaleZ" "scaleZ(▮)" xah-css--ahf 0)
    ("skew" "skew(▮9deg)" xah-css--ahf 0)
    ("skewX" "skewX(▮)" xah-css--ahf 0)
    ("skewY" "skewY(▮)" xah-css--ahf 0)
    ("steps" "steps(▮)" xah-css--ahf 0)
    ("translate" "translate(▮px,▮px)" xah-css--ahf 0)
    ("translate3d" "translate3d(▮)" xah-css--ahf 0)
    ("translateX" "translateX(▮)" xah-css--ahf 0)
    ("translateY" "translateY(▮)" xah-css--ahf 0)
    ("translateZ" "translateZ(▮)" xah-css--ahf 0)
    ("zaqua" "#00ffff" xah-css--ahf 0)
    ("zblack" "#000000" xah-css--ahf 0)
    ("zblue" "#0000ff" xah-css--ahf 0)
    ("zfuchsia" "#ff00ff" xah-css--ahf 0)
    ("zgray" "#808080" xah-css--ahf 0)
    ("zgreen" "#008000" xah-css--ahf 0)
    ("zlime" "#00ff00" xah-css--ahf 0)
    ("zmaroon" "#800000" xah-css--ahf 0)
    ("znavy" "#000080" xah-css--ahf 0)
    ("zolive" "#808000" xah-css--ahf 0)
    ("zorange" "#ffa500" xah-css--ahf 0)
    ("zpurple" "#800080" xah-css--ahf 0)
    ("zred" "#ff0000" xah-css--ahf 0)
    ("zsilver" "#c0c0c0" xah-css--ahf 0)
    ("zteal" "#008080" xah-css--ahf 0)
    ("zwhite" "#ffffff" xah-css--ahf 0)
    ("zyellow" "#ffff00" xah-css--ahf 0)
   ))

(define-abbrev-table 'xah-find-output-mode-abbrev-table '())

(define-abbrev-table 'xah-html-abbrev-table
  '(
    ("1css" "<link rel=\"stylesheet\" href=\"lbasic.css\" />" nil 0)
    ("1refresh" "<meta http-equiv=\"refresh\" content=\"0; url=http://example.com/\">" nil 0)
    ("1style" "<style type=\"text/css\">
p {line-height:130%}
</style>" nil 0)
    ("br" "<br />" nil 0)
    ("hr" "<hr />" nil 0)
    ("iframe" "<iframe src=\"some.html\" width=\"200\" height=\"300\"></iframe>" nil 0)
   ))

(define-abbrev-table 'xah-html-mode-abbrev-table '())

(define-abbrev-table 'xref--xref-buffer-mode-abbrev-table '())

(define-abbrev-table 'yaml-mode-abbrev-table '())

